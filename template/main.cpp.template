#include <gdx-cpp/Gdx.hpp>
#include <gdx-cpp/Log.hpp>
#include <gdx-cpp/Application.hpp>
#include <gdx-cpp/ApplicationListener.hpp>
#include <gdx-cpp/graphics/g2d/Sprite.hpp>
#include <gdx-cpp/graphics/g2d/SpriteBatch.hpp>
#include <gdx-cpp/gl.hpp>

using namespace gdx;

class {ProjectName}Application : public gdx::ApplicationListener {{
public:
    {ProjectName}Application() {{

    }}
    
    void create() {{
        batch = std::unique_ptr<gdx::SpriteBatch>(new gdx::SpriteBatch);
        gdxLogo = std::make_shared<gdx::Sprite>(gdx::Texture::newFromFile(gdx::files->internal("data/logo.png")));
        gdxLogo->setPosition(100, 100);
    }}
    
    void dispose() {{
    }}
    
    void pause() {{
    }}
    
    void render() {{
        gdx::gl10->glClearColor(1,1,1,1);
        gdx::gl->glClear(GL_COLOR_BUFFER_BIT);
        batch->begin();
        gdxLogo->draw(*batch);
        batch->end();
    }}

    void resize(int width, int height) {{
    }}
    
    void resume() {{
    }}
private:
    gdx::Sprite::ptr gdxLogo;
    std::unique_ptr<gdx::SpriteBatch> batch;
}};

void gdxcpp_init(int argc, char** argv) {{
    gdxcpp_create_application(new {ProjectName}Application, "{ProjectName}", 640, 480);
}}
